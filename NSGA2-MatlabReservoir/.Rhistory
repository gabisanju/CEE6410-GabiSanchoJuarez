# https://plot.ly/r/parallel-coordinates-plot/
packageVersion('plotly')
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="parcoords-dimensions")
chart_link
#df <- read.csv("https://raw.githubusercontent.com/bcdunbar/datasets/master/iris.csv")
#Calculate mins and maxes
mins <- floor(apply(dfMaggorieAlts,2,min))
maxes <- ceiling(apply(dfMaggorieAlts,2,max))
p <- dfMaggorieAlts %>%
plot_ly(type = 'parcoords',
line = list(color='blue'),
dimensions = list(
list(range = c(mins[1],maxes[1]),
label = MaggorieVarsAbrev[1], values =  ~FloodIntensity,
tickvals= c(mins[1],maxes[1])),
list(range = c(mins[2],maxes[2]),
label = MaggorieVarsAbrev[2], values = ~UnmetIrrDemand,
tickvals= c(mins[2],maxes[2])),
list(range = c(mins[3],maxes[3]),
label = MaggorieVarsAbrev[3], values =  ~UnmetHydroDemand,
tickvals= c(mins[3],maxes[3])),
list(range = c(mins[4],maxes[4]),
label = MaggorieVarsAbrev[4], values = ~UnmetRecreationDemand,
tickvals= c(mins[4],maxes[4])),
list(range = c(mins[5],maxes[5]),
tickvals = c(mins[5],maxes[5]),
label = MaggorieVarsAbrev[5], values = ~x1),
list(range = c(mins[6],maxes[6]),
tickvals = c(mins[6],maxes[6]),
label = MaggorieVarsAbrev[6], values = ~x2),
list(range = c(mins[7],maxes[7]),
tickvals = c(mins[7],maxes[7]),
label = MaggorieVarsAbrev[7], values = ~x3)
)
)
print (p)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="parcoords-basic")
chart_link
###  Build Interactive Parallel Coordinate Plot for Lake Maggorrie Management Objectives and Decision Variables (HW 7)
### Also build a Scatter Matrix Plot of All 2x2 Combinations of Objectives and Decision Variables
# David Rosenberg
# Utah State University
# david.rosenberg@usu.edu
# January 21, 2019
# Updated November 11, 2024
# Load the relevant packages
install.packages("plotly")
install.packages("crosstalk")
###  Build Interactive Parallel Coordinate Plot for Lake Maggorrie Management Objectives and Decision Variables (HW 7)
### Also build a Scatter Matrix Plot of All 2x2 Combinations of Objectives and Decision Variables
# David Rosenberg
# Utah State University
# david.rosenberg@usu.edu
# January 21, 2019
# Updated November 11, 2024
# Load the relevant packages
install.packages("plotly")
install.packages("crosstalk")
install.packages("dplyr")
library(plotly)
library(dplyr)
# Read CSV into R dataframe
dfMaggorieAlts <- read.csv(file="HW7_altsNEW.csv",
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
# Reader the header names from the dataframe
MaggorieVars <- names(dfMaggorieAlts)
# Define column headers to include on the plot
MaggorieVarsAbrev <- c('Flood Intensity (m)','Unmet Irrigation Demand (m3/d)','Unmet Hydropower Demand (m3/d)', 'Recreation Storage Deficit (m3)',
'Shortage Slope (x1; radians)', ' Spill Trigger (x2; m3)', 'Spill Slope (x3; radians)')
### Load Using Plotly
# https://plot.ly/r/getting-started/
# Provide Plotly credentials
##Sys.setenv("plotly_username"="dzeke")
##Sys.setenv("plotly_api_key"="k3599slnERhsfjhKjQnR")
# Follow these instructions
# https://plot.ly/r/parallel-coordinates-plot/
packageVersion('plotly')
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="parcoords-dimensions")
chart_link
#df <- read.csv("https://raw.githubusercontent.com/bcdunbar/datasets/master/iris.csv")
#Calculate mins and maxes
mins <- floor(apply(dfMaggorieAlts,2,min))
maxes <- ceiling(apply(dfMaggorieAlts,2,max))
p <- dfMaggorieAlts %>%
plot_ly(type = 'parcoords',
line = list(color='blue'),
dimensions = list(
list(range = c(mins[1],maxes[1]),
label = MaggorieVarsAbrev[1], values =  ~FloodIntensity,
tickvals= c(mins[1],maxes[1])),
list(range = c(mins[2],maxes[2]),
label = MaggorieVarsAbrev[2], values = ~UnmetIrrDemand,
tickvals= c(mins[2],maxes[2])),
list(range = c(mins[3],maxes[3]),
label = MaggorieVarsAbrev[3], values =  ~UnmetHydroDemand,
tickvals= c(mins[3],maxes[3])),
list(range = c(mins[4],maxes[4]),
label = MaggorieVarsAbrev[4], values = ~UnmetRecreationDemand,
tickvals= c(mins[4],maxes[4])),
list(range = c(mins[5],maxes[5]),
tickvals = c(mins[5],maxes[5]),
label = MaggorieVarsAbrev[5], values = ~x1),
list(range = c(mins[6],maxes[6]),
tickvals = c(mins[6],maxes[6]),
label = MaggorieVarsAbrev[6], values = ~x2),
list(range = c(mins[7],maxes[7]),
tickvals = c(mins[7],maxes[7]),
label = MaggorieVarsAbrev[7], values = ~x3)
)
)
print (p)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="parcoords-basic")
chart_link
# Show another matrix correlation plot (18 x 18)
# Calculate correlation matrix for variables
# Approach #1 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
corMatrix <- cor(dfMaggorieAlts[,1:7])
# Approach #2 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
pairs(dfMaggorieAlts[,1:7])
install.packages("plotly")
install.packages("plotly")
pScatterMatrix <- pairs(dfMaggorieAlts[,1:7])
print(pScatterMatrix)
# Also Print to PDF
#https://bookdown.org/ndphillips/YaRrr/saving-plots-to-a-file-with-pdf-jpeg-and-png.html
# Step 1: Call the pdf command to start the plot
pdf(file = "ScatterMatrix.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 6) # The height of the plot in inches
# Step 2: Create the plot with R code
pairs(dfMaggorieAlts[,1:7])
# Step 3: Run dev.off() to create the file!
dev.off()
# Load the relevant packages
install.packages("plotly")
install.packages("plotly")
install.packages("crosstalk")
install.packages("crosstalk")
# Load the relevant packages
install.packages("plotly")
install.packages("plotly")
dfMaggorieAlts <- read.csv(file="HW8_altsNEW.csv",
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
# Reader the header names from the dataframe
MaggorieVars <- names(dfMaggorieAlts)
# Define column headers to include on the plot
MaggorieVarsAbrev <- c('Flood Intensity (m)','Unmet Irrigation Demand (m3/d)','Unmet Hydropower Demand (m3/d)', 'Recreation Storage Deficit (m3)',
'Shortage Slope (x1; radians)', ' Spill Trigger (x2; m3)', 'Spill Slope (x3; radians)')
############# Parallel Coordinate Plot Using Plotly
# https://plot.ly/r/getting-started/
# Provide Plotly credentials
# Does not work because Plotly no longer allows new accounts.
##Sys.setenv("plotly_username"="___________")
##Sys.setenv("plotly_api_key"="____________")
# Follow these instructions
# https://plot.ly/r/parallel-coordinates-plot/
packageVersion('plotly')
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="parcoords-dimensions")
chart_link
#df <- read.csv("https://raw.githubusercontent.com/bcdunbar/datasets/master/iris.csv")
#Calculate mins and maxes
mins <- floor(apply(dfMaggorieAlts,2,min))
maxes <- ceiling(apply(dfMaggorieAlts,2,max))
p <- dfMaggorieAlts %>%
plot_ly(type = 'parcoords',
line = list(color='blue'),
dimensions = list(
list(range = c(mins[1],maxes[1]),
label = MaggorieVarsAbrev[1], values =  ~FloodIntensity,
tickvals= c(mins[1],maxes[1])),
list(range = c(mins[2],maxes[2]),
label = MaggorieVarsAbrev[2], values = ~UnmetIrrDemand,
tickvals= c(mins[2],maxes[2])),
list(range = c(mins[3],maxes[3]),
label = MaggorieVarsAbrev[3], values =  ~UnmetHydroDemand,
tickvals= c(mins[3],maxes[3])),
list(range = c(mins[4],maxes[4]),
label = MaggorieVarsAbrev[4], values = ~UnmetRecreationDemand,
tickvals= c(mins[4],maxes[4])),
list(range = c(mins[5],maxes[5]),
tickvals = c(mins[5],maxes[5]),
label = MaggorieVarsAbrev[5], values = ~x1),
list(range = c(mins[6],maxes[6]),
tickvals = c(mins[6],maxes[6]),
label = MaggorieVarsAbrev[6], values = ~x2),
list(range = c(mins[7],maxes[7]),
tickvals = c(mins[7],maxes[7]),
label = MaggorieVarsAbrev[7], values = ~x3)
)
)
print (p)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="parcoords-basic")
chart_link
##### Scatter Matrix Correlation Plot in Base R (7 x 7)
# Calculate correlation matrix for variables
# Approach #1 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
corMatrix <- cor(dfMaggorieAlts[,1:7])
# Approach #2 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
# Print to Plot window in R Studio
pairs(dfMaggorieAlts[,1:7])
# Also Print to PDF
#https://bookdown.org/ndphillips/YaRrr/saving-plots-to-a-file-with-pdf-jpeg-and-png.html
# Step 1: Call the pdf command to start the plot
pdf(file = "ScatterMatrix.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 6) # The height of the plot in inches
# Step 2: Create the plot with R code
pairs(dfMaggorieAlts[,1:7])
# Step 3: Run dev.off() to create the file!
dev.off()
pairs(dfMaggorieAlts[,1:7])
###  Build Interactive Parallel Coordinate Plot for Lake Maggorrie Management Objectives and Decision Variables (HW 7)
### Also build a Scatter Matrix Correlation Plot of All 2x2 Combinations of Objectives and Decision Variables
# David Rosenberg
# Utah State University
# david.rosenberg@usu.edu
# January 21, 2019
# Updated November 11, 2024
# Load the relevant packages
install.packages("plotly")
install.packages("crosstalk")
install.packages("dplyr")
library(plotly)
library(dplyr)
# Read CSV into R dataframe
dfMaggorieAlts <- read.csv(file="HW8_altsNEW.csv",
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
# Reader the header names from the dataframe
MaggorieVars <- names(dfMaggorieAlts)
# Define column headers to include on the plot
MaggorieVarsAbrev <- c('Flood Intensity (m)','Unmet Irrigation Demand (m3/d)','Unmet Hydropower Demand (m3/d)', 'Recreation Storage Deficit (m3)',
'Shortage Slope (x1; radians)', ' Spill Trigger (x2; m3)', 'Spill Slope (x3; radians)')
############# Parallel Coordinate Plot Using Plotly
# https://plot.ly/r/getting-started/
# Provide Plotly credentials
# Does not work because Plotly no longer allows new accounts.
##Sys.setenv("plotly_username"="___________")
##Sys.setenv("plotly_api_key"="____________")
# Follow these instructions
# https://plot.ly/r/parallel-coordinates-plot/
packageVersion('plotly')
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="parcoords-dimensions")
chart_link
#df <- read.csv("https://raw.githubusercontent.com/bcdunbar/datasets/master/iris.csv")
#Calculate mins and maxes
mins <- floor(apply(dfMaggorieAlts,2,min))
maxes <- ceiling(apply(dfMaggorieAlts,2,max))
p <- dfMaggorieAlts %>%
plot_ly(type = 'parcoords',
line = list(color='blue'),
dimensions = list(
list(range = c(mins[1],maxes[1]),
label = MaggorieVarsAbrev[1], values =  ~FloodIntensity,
tickvals= c(mins[1],maxes[1])),
list(range = c(mins[2],maxes[2]),
label = MaggorieVarsAbrev[2], values = ~UnmetIrrDemand,
tickvals= c(mins[2],maxes[2])),
list(range = c(mins[3],maxes[3]),
label = MaggorieVarsAbrev[3], values =  ~UnmetHydroDemand,
tickvals= c(mins[3],maxes[3])),
list(range = c(mins[4],maxes[4]),
label = MaggorieVarsAbrev[4], values = ~UnmetRecreationDemand,
tickvals= c(mins[4],maxes[4])),
list(range = c(mins[5],maxes[5]),
tickvals = c(mins[5],maxes[5]),
label = MaggorieVarsAbrev[5], values = ~x1),
list(range = c(mins[6],maxes[6]),
tickvals = c(mins[6],maxes[6]),
label = MaggorieVarsAbrev[6], values = ~x2),
list(range = c(mins[7],maxes[7]),
tickvals = c(mins[7],maxes[7]),
label = MaggorieVarsAbrev[7], values = ~x3)
)
)
print (p)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="parcoords-basic")
chart_link
##### Scatter Matrix Correlation Plot in Base R (7 x 7)
# Calculate correlation matrix for variables
# Approach #1 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
corMatrix <- cor(dfMaggorieAlts[,1:7])
# Approach #2 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
# Print to Plot window in R Studio
pairs(dfMaggorieAlts[,1:7])
# Also Print to PDF
#https://bookdown.org/ndphillips/YaRrr/saving-plots-to-a-file-with-pdf-jpeg-and-png.html
# Step 1: Call the pdf command to start the plot
pdf(file = "ScatterMatrix.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 6) # The height of the plot in inches
# Step 2: Create the plot with R code
pairs(dfMaggorieAlts[,1:7])
# Step 3: Run dev.off() to create the file!
dev.off()
install.packages("plotly")
install.packages("crosstalk")
install.packages("dplyr")
install.packages("crosstalk")
install.packages("dplyr")
#Clear the workspace
rm(list = ls())
# Load the relevant packages
install.packages("plotly")
install.packages("crosstalk")
install.packages("dplyr")
library(plotly)
library(dplyr)
# Read CSV into R dataframe
dfMaggorieAlts <- read.csv(file="HW8_altsNew.csv",
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
# Reader the header names from the dataframe
MaggorieVars <- names(dfMaggorieAlts)
# Define column headers to include on the plot
MaggorieVarsAbrev <- c('Flood Intensity (m)','Unmet Irrigation Demand (m3/d)','Unmet Hydropower Demand (m3/d)', 'Recreation Storage Deficit (m3)',
'Shortage Slope (x1; radians)', ' Spill Trigger (x2; m3)', 'Spill Slope (x3; radians)')
packageVersion('plotly')
#Calculate mins and maxes
mins <- floor(apply(dfMaggorieAlts,2,min))
maxes <- ceiling(apply(dfMaggorieAlts,2,max))
p <- dfMaggorieAlts %>%
plot_ly(type = 'parcoords',
line = list(color='blue'),
dimensions = list(
list(range = c(mins[1],maxes[1]),
label = MaggorieVarsAbrev[1], values =  ~FloodIntensity,
tickvals= c(mins[1],maxes[1])),
list(range = c(mins[2],maxes[2]),
label = MaggorieVarsAbrev[2], values = ~UnmetIrrDemand,
tickvals= c(mins[2],maxes[2])),
list(range = c(mins[3],maxes[3]),
label = MaggorieVarsAbrev[3], values =  ~UnmetHydroDemand,
tickvals= c(mins[3],maxes[3])),
list(range = c(mins[4],maxes[4]),
label = MaggorieVarsAbrev[4], values = ~UnmetRecreationDemand,
tickvals= c(mins[4],maxes[4])),
list(range = c(mins[5],maxes[5]),
tickvals = c(mins[5],maxes[5]),
label = MaggorieVarsAbrev[5], values = ~x1),
list(range = c(mins[6],maxes[6]),
tickvals = c(mins[6],maxes[6]),
label = MaggorieVarsAbrev[6], values = ~x2),
list(range = c(mins[7],maxes[7]),
tickvals = c(mins[7],maxes[7]),
label = MaggorieVarsAbrev[7], values = ~x3)
)
)
print (p)
# Read CSV into R dataframe
dfMaggorieAlts <- read.csv(file="HW8_altsNew.csv",
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
# Reader the header names from the dataframe
MaggorieVars <- names(dfMaggorieAlts)
# Define column headers to include on the plot
MaggorieVarsAbrev <- c('Flood Intensity (m)','Unmet Irrigation Demand (m3/d)','Unmet Hydropower Demand (m3/d)', 'Recreation Storage Deficit (m3)',
'Shortage Slope (x1; radians)', ' Spill Trigger (x2; m3)', 'Spill Slope (x3; radians)')
############# Parallel Coordinate Plot Using Plotly
# https://plot.ly/r/getting-started/
# Provide Plotly credentials
# Does not work because Plotly no longer allows new accounts.
##Sys.setenv("plotly_username"="___________")
##Sys.setenv("plotly_api_key"="____________")
# Follow these instructions
# https://plot.ly/r/parallel-coordinates-plot/
packageVersion('plotly')
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
#chart_link = api_create(p, filename="parcoords-dimensions")
#chart_link
#df <- read.csv("https://raw.githubusercontent.com/bcdunbar/datasets/master/iris.csv")
#Calculate mins and maxes
mins <- floor(apply(dfMaggorieAlts,2,min))
maxes <- ceiling(apply(dfMaggorieAlts,2,max))
p <- dfMaggorieAlts %>%
plot_ly(type = 'parcoords',
line = list(color='blue'),
dimensions = list(
list(range = c(mins[1],maxes[1]),
label = MaggorieVarsAbrev[1], values =  ~FloodIntensity,
tickvals= c(mins[1],maxes[1])),
list(range = c(mins[2],maxes[2]),
label = MaggorieVarsAbrev[2], values = ~UnmetIrrDemand,
tickvals= c(mins[2],maxes[2])),
list(range = c(mins[3],maxes[3]),
label = MaggorieVarsAbrev[3], values =  ~UnmetHydroDemand,
tickvals= c(mins[3],maxes[3])),
list(range = c(mins[4],maxes[4]),
label = MaggorieVarsAbrev[4], values = ~UnmetRecreationDemand,
tickvals= c(mins[4],maxes[4])),
list(range = c(mins[5],maxes[5]),
tickvals = c(mins[5],maxes[5]),
label = MaggorieVarsAbrev[5], values = ~x1),
list(range = c(mins[6],maxes[6]),
tickvals = c(mins[6],maxes[6]),
label = MaggorieVarsAbrev[6], values = ~x2),
list(range = c(mins[7],maxes[7]),
tickvals = c(mins[7],maxes[7]),
label = MaggorieVarsAbrev[7], values = ~x3)
)
)
print (p)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
#chart_link = api_create(p, filename="parcoords-basic")
#chart_link
##### Scatter Matrix Correlation Plot in Base R (7 x 7)
# Calculate correlation matrix for variables
# Approach #1 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
corMatrix <- cor(dfMaggorieAlts[,1:7])
# Approach #2 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
# Print to Plot window in R Studio
pairs(dfMaggorieAlts[,1:7])
# Also Print to PDF
#https://bookdown.org/ndphillips/YaRrr/saving-plots-to-a-file-with-pdf-jpeg-and-png.html
# Step 1: Call the pdf command to start the plot
pdf(file = "ScatterMatrix.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 6) # The height of the plot in inches
# Step 2: Create the plot with R code
pairs(dfMaggorieAlts[,1:7])
# Step 3: Run dev.off() to create the file!
dev.off()
##### Scatter Matrix Correlation Plot in Base R (7 x 7)
# Calculate correlation matrix for variables
# Approach #1 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
corMatrix <- cor(dfMaggorieAlts[,1:7])
# Approach #2 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
# Print to Plot window in R Studio
pairs(dfMaggorieAlts[,1:7])
#Clear the workspace
rm(list = ls())
# Load the relevant packages
install.packages("plotly")
install.packages("crosstalk")
install.packages("dplyr")
library(plotly)
library(dplyr)
# Read CSV into R dataframe
dfMaggorieAlts <- read.csv(file="HW8_altsNew.csv",
header=TRUE,
stringsAsFactors=FALSE,
sep=",")
# Reader the header names from the dataframe
MaggorieVars <- names(dfMaggorieAlts)
# Define column headers to include on the plot
MaggorieVarsAbrev <- c('Flood Intensity (m)','Unmet Irrigation Demand (m3/d)','Unmet Hydropower Demand (m3/d)', 'Recreation Storage Deficit (m3)',
'Shortage Slope (x1; radians)', ' Spill Trigger (x2; m3)', 'Spill Slope (x3; radians)')
packageVersion('plotly')
#Calculate mins and maxes
mins <- floor(apply(dfMaggorieAlts,2,min))
maxes <- ceiling(apply(dfMaggorieAlts,2,max))
p <- dfMaggorieAlts %>%
plot_ly(type = 'parcoords',
line = list(color='blue'),
dimensions = list(
list(range = c(mins[1],maxes[1]),
label = MaggorieVarsAbrev[1], values =  ~FloodIntensity,
tickvals= c(mins[1],maxes[1])),
list(range = c(mins[2],maxes[2]),
label = MaggorieVarsAbrev[2], values = ~UnmetIrrDemand,
tickvals= c(mins[2],maxes[2])),
list(range = c(mins[3],maxes[3]),
label = MaggorieVarsAbrev[3], values =  ~UnmetHydroDemand,
tickvals= c(mins[3],maxes[3])),
list(range = c(mins[4],maxes[4]),
label = MaggorieVarsAbrev[4], values = ~UnmetRecreationDemand,
tickvals= c(mins[4],maxes[4])),
list(range = c(mins[5],maxes[5]),
tickvals = c(mins[5],maxes[5]),
label = MaggorieVarsAbrev[5], values = ~x1),
list(range = c(mins[6],maxes[6]),
tickvals = c(mins[6],maxes[6]),
label = MaggorieVarsAbrev[6], values = ~x2),
list(range = c(mins[7],maxes[7]),
tickvals = c(mins[7],maxes[7]),
label = MaggorieVarsAbrev[7], values = ~x3)
)
)
print (p)
##### Scatter Matrix Correlation Plot in Base R (7 x 7)
# Calculate correlation matrix for variables
# Approach #1 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
corMatrix <- cor(dfMaggorieAlts[,1:7])
View(corMatrix)
# Approach #2 from https://www.r-bloggers.com/scatter-plot-matrices-in-r/
# Print to Plot window in R Studio
pairs(dfMaggorieAlts[,1:7])
